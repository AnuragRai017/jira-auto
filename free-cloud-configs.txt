# Free Cloud Deployment Guide
# This file contains configurations for deploying Jira automation on free cloud platforms

# ===================================================================
# 1. RAILWAY (Recommended - Simple & Free)
# ===================================================================
# Free tier: 512MB RAM, $5/month credit (enough for 24/7 operation)
# Automatic deployments from GitHub
# Built-in cron job support

# railway.toml
[build]
command = "npm run build"

[deploy]
healthcheckPath = "/"
healthcheckTimeout = 100
restartPolicyType = "always"

[env]
NODE_ENV = "production"

# ===================================================================
# 2. RENDER (Great Free Tier)
# ===================================================================
# Free tier: 512MB RAM, sleeps after 15min inactivity
# We'll use cron job to keep it alive during business hours

# render.yaml (place in repo root)
services:
  - type: web
    name: jira-automation
    env: node
    plan: free
    buildCommand: npm run build
    startCommand: node dist/customer-field-automation.js continuous 480 300000
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - fromGroup: jira-secrets

# ===================================================================  
# 3. HEROKU (Classic Choice)
# ===================================================================
# Free tier discontinued, but has low-cost options ($7/month)

# Procfile
web: node dist/customer-field-automation.js continuous 480 300000
worker: node dist/customer-field-automation.js continuous 480 300000

# app.json
{
  "name": "jira-customer-automation",
  "description": "Automated Jira customer field management",
  "repository": "https://github.com/yourusername/jira-automation",
  "logo": "https://node-js-sample.herokuapp.com/node.png",
  "keywords": ["node", "jira", "automation"],
  "buildpacks": [
    {
      "url": "heroku/nodejs"
    }
  ]
}

# ===================================================================
# 4. FLY.IO (Docker-based, Good Free Tier)
# ===================================================================
# Free tier: 3 shared VMs, 160GB/month bandwidth

# fly.toml
app = "jira-automation"
primary_region = "ord"

[build]
  dockerfile = "Dockerfile"

[http_service]
  internal_port = 3000
  force_https = true
  auto_stop_machines = false
  auto_start_machines = true

[[vm]]
  cpu_kind = "shared"
  cpus = 1
  memory_mb = 256

# ===================================================================
# 5. GOOGLE CLOUD RUN (Free Tier + Scheduler)
# ===================================================================
# Free tier: 2 million requests, 400,000 GB-seconds
# Perfect for scheduled runs

# cloudbuild.yaml
steps:
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/jira-automation', '.']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/jira-automation']
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run', 'deploy', 'jira-automation',
      '--image', 'gcr.io/$PROJECT_ID/jira-automation',
      '--platform', 'managed',
      '--region', 'us-central1',
      '--allow-unauthenticated'
    ]

# ===================================================================
# 6. VERCEL (Serverless Functions - Limited)
# ===================================================================
# Free tier: Good for API endpoints, not long-running processes
# Best for webhook-based automation

# api/process-tickets.js
export default async function handler(req, res) {
  // This would trigger the automation
  const { spawn } = require('child_process');
  const child = spawn('node', ['../dist/customer-field-automation.js', 'process']);
  
  child.on('close', (code) => {
    res.status(200).json({ message: 'Automation completed', code });
  });
}

# vercel.json
{
  "functions": {
    "api/process-tickets.js": {
      "maxDuration": 300
    }
  },
  "cron": [
    {
      "path": "/api/process-tickets",
      "schedule": "*/10 * * * 1-5"
    }
  ]
}
